import java.util.*;

public class Main {
    static class Node {
        int data;
        Node left;
        Node right;

        public Node(int d) {
            data = d;
            left = null;
            right = null;
        }
    }
    static Node root;
    static Scanner sc=new Scanner(System.in);
    public static void main(String[] args) {
        Main m=new Main();
        int post[]=takeInput();
        int in[]=takeInput();
       root=buildTree(post,in,in.length-1);
       preorder(root);
    }
    public static int[] takeInput()
    {
        int n=sc.nextInt();
        int a[]=new int[n];
        for(int i=0;i<n;i++)
        {
            a[i]=sc.nextInt();
        }
        return a;
    }
    static int x;
    static class index
    {
        int ind;
    }
    static Node construct(int post[],int in[],int start,int end,index idx)
    {

        if(start>end)
            return null;
        Node n=new Node(post[idx.ind--]);
        if(start==end)
            return n;
        for(int s=start;s<=end;s++)
        {
            if(in[s]==n.data)
                x=s;
        }
        n.right=construct(post,in,x+1,end,idx);
        n.left=construct(post,in,start,x-1,idx);
        return n;
    }
    static Node buildTree(int post[],int in[],int n)
    {
        index i=new index();
        i.ind=n;
        return construct(post,in,0,n,i);

    }
    static void preorder(Node root)
    {
        if(root==null)
            return ;
        System.out.print(root.data+" ");
        preorder(root.left);

        preorder(root.right);
    }
}
